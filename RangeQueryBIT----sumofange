//Consult HackerEarth if face any issues
#include <bits/stdc++.h>
using namespace std;
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
    cerr << name << " : " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void __f(const char *names, Arg1 &&arg1, Args&&... args) {
    const char *comma = strchr(names + 1, ',');
    cerr.write(names, comma - names) << " : " << arg1 << " | ";
    __f(comma + 1, args...);
}
#define int long long int
#define ld long double
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define MOD 1000000007
#define mod 998244353
#define bug cout<<"HY"<<endl
#define boost ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define numize(A) A.numize(unique(A.begin(), A.end()) - A.begin())
typedef pair<int,int> P;
int power(int a,int b)
{
    if(b==0)
        return 1;
    if(b%2==0)
        return (power((a*a)%mod,b/2))%mod;
    return (a*(power((a*a)%mod,b/2))%mod)%mod;
}
int modInv(int n)
{
    return power(n, MOD-2);
}
int nCr(int n, int r, int p=MOD)
{
   if (r==0)
      return 1;
    int Fact[n+1];
    Fact[0] = 1;
    for (int i=1 ; i<=n; i++)
    {
        Fact[i] = (Fact[i-1]*i)%p;
    }
    return (((Fact[n]* modInv(Fact[r])) % MOD) *(modInv(Fact[n-r]) % MOD)) % MOD;
}
double PI=3.14159265359;
void Update(int ind,int val,int Bit[],int n)
{
    while(ind<=n)
    {
        Bit[ind]+=val;
        ind=ind+(ind&-ind);
    }
    return;
}
int Query(int ind,int Bit[])
{
    int ans=0;
    while(ind>0)
    {
        ans+=Bit[ind];
        ind=ind&(ind-1);
    }
    return ans;
}
int32_t main()
{
    boost;
    int n,i;
    cin>>n;
    int A[n+1];
    for(i=1;i<=n;i++)
        cin>>A[i];
    int Bit[n+1];
    memset(Bit,0,sizeof(Bit));
    for(i=1;i<=n;i++)
        Update(i,A[i],Bit,n);
    Update(1,-1,Bit,n);
    Update(2,-1,Bit,n);
    for(i=1;i<=n;i++)
        cout<<Query(i,Bit)<<" ";
}
